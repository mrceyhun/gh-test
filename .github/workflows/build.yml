# Builds and publish docker images
name: Build docker images
on:
  push:
    tags:
      - 'v*.*.*'
jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.step1.outputs.status }}
      tag_msg: ${{ steps.step1.outputs.tag_msg }}
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.ref }}
    - id: step1
      run: |
        TAG_COMMIT_MSG_SHOULD_START_WITH="Build docker images"
        # Firstly get tag commit message and put it into environment variables
        GIT_TAG_MSG="$(git tag -l --format="%(contents)" $GITHUB_REF_NAME)"
        echo "Tag message:" $GITHUB_TAG_MSG
        echo "::set-output name=tag_msg::${GITHUB_TAG_MSG}"
        if [[ $GIT_TAG_MSG == *"$TAG_COMMIT_MSG_SHOULD_START_WITH"* ]]; then
            echo "success"
            echo "::set-output name=status::success"
        else
            echo "failure"
            echo "::set-output name=status::failure"
        fi
  build:
    runs-on: ubuntu-latest
    needs: check
    if: contains(needs.check.outputs.status, 'success')
    name: Build spark docker image
    steps:
      - name: Test
        run: |
          echo "Check status:" ${{needs.check.outputs.status}}
          echo "Tag message:" ${{needs.check.outputs.tag_msg}}

