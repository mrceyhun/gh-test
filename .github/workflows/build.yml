# Builds and publish docker images
#
# !!!
#  While creating tags, tag commit message should obey regex rule:
#     <<<<<<<<<<     Build.*py=(.+) and date=(.+)'     >>>>>>>>>>
# !!!
#   "py=" value refers to "cmsmon-py" docker image tag and building the docker image with required python version 
#   "date=" value refers to "cmsmon-hadoop-base" image tag that will be set and used in other images
#
name: Build docker images
on:
  push:
    tags:
      - 'v*.*.*'
jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.step1.outputs.status }}
      tag_py_version: ${{ steps.step1.outputs.tag_py_version }}
      tag_date: ${{ steps.step1.outputs.tag_date }}
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.ref }}
    - id: step1
      run: |
        # Tag commit messages should start with
        REGEX_TAG_COMMIT_MSG='Build.*py=(.+) and date=(.+)'
        
        # Firstly get tag commit message and put it into environment variables
        GIT_TAG_MSG="$(git tag -l --format="%(contents)" $GITHUB_REF_NAME)"
        
        echo "Tag message:" $GIT_TAG_MSG
               
        # Check tag commit message obeys regex rule
        [[ $GIT_TAG_MSG =~ $REGEX_TAG_COMMIT_MSG ]]
        if [[ ! -z "${BASH_REMATCH[1]}" && ! -z "${BASH_REMATCH[2]}" ]]; then
            echo "success"
            echo "::set-output name=status::success"
            echo "::set-output name=tag_py_version::${BASH_REMATCH[1]}"
            echo "::set-output name=tag_date::${BASH_REMATCH[2]}"
        else
            echo "failure"
            echo "::set-output name=status::failure"
        fi
  build:
    runs-on: ubuntu-latest
    needs: check
    if: contains(needs.check.outputs.status, 'success')
    name: Build spark docker image
    steps:
      - name: Test
        run: |
          echo "Check status:" ${{needs.check.outputs.status}}
          echo "Tag message:" ${{needs.check.outputs.tag_py_version}}
          echo "Tag message:" ${{needs.check.outputs.tag_date}}

